// 容器宽度，高度，内外边距rem值变量
$full-width: 19.2rem;
:root {
    --height-primary: 9.37rem;  //--width-primary  ：变量名，css3有规则
}
// $full-height: var(--height-primary); //用var来盛放变量名, 并未生效要深研究var()
// link1: https://blog.csdn.net/weixin_44392565/article/details/85755592
// link2: https://codepen.io/jakealbaugh/post/css4-variables-and-sass
$full-height: 9.37rem; // 没想出高度的各种自适应，要不就媒体查询高度，还是先使用100%高度布局，也没有实现，js更改scss变量，使用百分比，可以使用js控制一下根节点高度
$menu-width: 3rem;
$fold-menu-width: .7rem;
// 颜色变量
$color-azure-blue: #2473C3;
$color-white: #fff;
$color-black: #000;
$color-grey-blue: #AAC1CE;
$color-purple: #B894DB;
$color-aqua: #82D2EB;
$color-blue-pearl: #98B9E9;
$color-teal: #77CCCE;
$color-blush: #FF8D8D;
$color-honey: #FFD272;
$color-tangerine: #FFAD75;
$color-true-blue: #1E5D95;
$color-powder-blue: #EAF3FA;
$color-super-light-grey: #F5F6F8;
$color-regular: #4D5D72;
$color-grey: #65758B;
// scss应用于rem布局（fe有rem值定义）
html{
    font-size: 100px;
}
*{
    margin: 0;
    padding: 0;
}
body{
    font-size: 1rem;
    color: #000;
}


// @media only screen and (max-width: 1920px) and (min-width:1680px) {
//     html,body {
//     font-size:55px;
//     }
// }
// @media only screen and (max-width: 1680px) and (min-width:1600px) {
//     html,body {
//     font-size:50px;
//     }
// }
// @media only screen and (max-width: 1600px), only screen and (min-width:1440px) {
//     html,body {
//     font-size:47.5px;
//     }
// }
// @media only screen and (max-width: 1440px), only screen and (min-width:1360px) {
//     html,body {
//     font-size:42.5px;
//     }
// }
// @media only screen and (max-width: 1360px), only screen and (min-width:1280px) {
//     html,body {
//     font-size:40px;
//     }
// }
// @media only screen and (max-width: 1280px){
//     html,body {
//     font-size:37.5px;
//     }
// }
